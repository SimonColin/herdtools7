C RR+RR+rmwrlxrlx-porlxrlxs
"RmwRlxRlx PodWRRlxRlx HatRlxRlx RmwRlxRlx PodWRRlxRlx HatRlxRlx"
Cycle=HatRlxRlx RmwRlxRlx PodWRRlxRlx HatRlxRlx RmwRlxRlx PodWRRlxRlx
Generator=diycross7 (version 7.50+1(dev))
Prefetch=0:x=F,0:y=T,1:y=F,1:x=T
Com=Fr Fr
Orig=RmwRlxRlx PodWRRlxRlx HatRlxRlx RmwRlxRlx PodWRRlxRlx HatRlxRlx

{}

P0 (atomic_int* y,atomic_int* x) {
  int r0 = atomic_exchange_explicit(x,1,memory_order_relaxed);
  int r1 = atomic_load_explicit(y,memory_order_relaxed);
}

P1 (atomic_int* y,atomic_int* x) {
  int r0 = atomic_exchange_explicit(y,1,memory_order_relaxed);
  int r1 = atomic_load_explicit(x,memory_order_relaxed);
}

exists
(0:r0=0 /\ 0:r1=0 /\ 1:r0=0 /\ 1:r1=0)
